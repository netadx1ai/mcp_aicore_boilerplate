# NetADX AI-CORE - Simple Nginx Configuration with CORS
# ======================================================
# 
# Simple reverse proxy configuration for development/staging
# No SSL, basic CORS support
#
# Usage:
#   1. Copy to /etc/nginx/sites-available/netadx-aicore-simple
#   2. Update server_name
#   3. Create symlink: ln -s /etc/nginx/sites-available/netadx-aicore-simple /etc/nginx/sites-enabled/
#   4. Test: sudo nginx -t
#   5. Reload: sudo systemctl reload nginx

# Upstream backend
upstream netadx_aicore {
    server 127.0.0.1:8005;
    keepalive 32;
}

server {
    listen 80;
    server_name api.netadx.local localhost;
    
    # Logging
    access_log /var/log/nginx/netadx-aicore-access.log;
    error_log /var/log/nginx/netadx-aicore-error.log;
    
    # Client body size
    client_max_body_size 10M;
    
    # Health check
    location /health {
        access_log off;
        proxy_pass http://netadx_aicore/health;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
    }
    
    # API endpoints with CORS
    location / {
        # Handle preflight OPTIONS
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS, PATCH' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,x-access-token' always;
            add_header 'Access-Control-Max-Age' 1728000 always;
            add_header 'Content-Type' 'text/plain; charset=utf-8' always;
            add_header 'Content-Length' 0 always;
            return 204;
        }
        
        # CORS headers
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS, PATCH' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,x-access-token' always;
        
        # Proxy to backend
        proxy_pass http://netadx_aicore;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Connection "";
    }
}
